{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","isUrl","url","test","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","touched","setTouched","errors","length","validate","isEnabled","Object","keys","some","x","onSubmit","event","preventDefault","newMovie","htmlFor","type","id","placeholder","required","value","onChange","target","onBlur","classNames","error","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a974bc3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\ntype Errors = {\n  title: boolean,\n  imgUrl: boolean,\n  imdbUrl: boolean,\n  imdbId: boolean\n};\n\nconst isUrl = (url: string) => {\n  return /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n    .test(url);\n};\n\nfunction validate(title: string, imgUrl: string, imdbUrl: string, imdbId: string) {\n  return {\n    title: title.length === 0,\n    imgUrl: imgUrl.length === 0 || !isUrl(imgUrl),\n    imdbUrl: imdbUrl.length === 0 || !isUrl(imdbUrl),\n    imdbId: imdbId.length === 0,\n  };\n}\n\nexport const NewMovie:React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [touched, setTouched] = useState({\n    title: false, imgUrl: false, imdbUrl: false, imdbId: false,\n  });\n\n  const clearInputs = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const clearErrors = () => {\n    setTouched({\n      title: false, imgUrl: false, imdbUrl: false, imdbId: false,\n    });\n  };\n\n  const errors = validate(title, imgUrl, imdbUrl, imdbId);\n\n  const isEnabled = !Object.keys(errors).some(x => errors[x as keyof Errors]);\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        const newMovie = {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        };\n\n        clearInputs();\n        clearErrors();\n        onAdd(newMovie);\n      }}\n    >\n      <label className=\"form__input\" htmlFor=\"title\">\n        Title:\n        <input\n          type=\"text\"\n          id=\"title\"\n          placeholder=\"Title\"\n          required\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n          onBlur={() => setTouched({ ...touched, title: true })}\n          className={classNames({ error: errors.title && touched.title })}\n        />\n      </label>\n      <label className=\"form__input\" htmlFor=\"description\">\n        Description:\n        <input\n          type=\"text\"\n          id=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={event => setDescription(event.target.value)}\n        />\n      </label>\n      <label className=\"form__input\" htmlFor=\"imgUrl\">\n        Image Url:\n        <input\n          type=\"text\"\n          id=\"imgUrl\"\n          placeholder=\"Image Url\"\n          required\n          value={imgUrl}\n          onChange={event => setImgUrl(event.target.value)}\n          onBlur={() => setTouched({ ...touched, imgUrl: true })}\n          className={classNames({ error: errors.imgUrl && touched.imgUrl })}\n        />\n      </label>\n      <label className=\"form__input\" htmlFor=\"imdbUrl\">\n        IMDB Url:\n        <input\n          type=\"text\"\n          id=\"imdbUrl\"\n          placeholder=\"IMDB Url\"\n          required\n          value={imdbUrl}\n          onChange={event => setImdbUrl(event.target.value)}\n          onBlur={() => setTouched({ ...touched, imdbUrl: true })}\n          className={classNames({ error: errors.imdbUrl && touched.imdbUrl })}\n        />\n      </label>\n      <label className=\"form__input\" htmlFor=\"imdbId\">\n        IMDB Id:\n        <input\n          type=\"text\"\n          id=\"imdbId\"\n          placeholder=\"IMDB Id\"\n          required\n          value={imdbId}\n          onChange={event => setImdbId(event.target.value)}\n          onBlur={() => setTouched({ ...touched, imdbId: true })}\n          className={classNames({ error: errors.imdbId && touched.imdbId })}\n        />\n      </label>\n      <button\n        type=\"submit\"\n        disabled={!isEnabled}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}